dbx1.m//第一问源代码
clear;
clc;
data=imread('lena.bmp');
figure(1)
subplot(2,3,1)
imshow(data);title('lena');%原图像

dataz1=imnoise(data,'gaussian',0.5,0.05);
subplot(2,3,2)
imshow(dataz1);title('lena u=0.5,s^2=0.05');

dataz2=imnoise(data,'gaussian',0.1,0.05);
subplot(2,3,3)
imshow(dataz2);title('lena u=0.1,s^2=0.05');

dataz3=imnoise(data,'gaussian',0,0.05);
subplot(2,3,4)
imshow(dataz3);title('lena u=0,s^2=0.05');

dataz4=imnoise(data,'gaussian',0,0.01);
subplot(2,3,5)
imshow(dataz4);title('lena u=0,s^2=0.01');

dataz5=imnoise(data,'gaussian',0,0.1);
subplot(2,3,6)
imshow(dataz5);title('lena u=0,s^2=0.1');

figure(2)
subplot(2,3,1)
imshow(dataz1);title('lena u=0.5,s^2=0.01');

n=5;
H1=(1/n^2)*ones(n,n);
[P1,Q1]=size(dataz1);
data1=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*H1;
        s=sum(sum(c));
        data1(i+(n-1)/2,j+(n-1)/2)=s;
    end
end
subplot(2,3,2)
imshow(uint8(data1));title('lena 算术均值');

data2=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=prod(prod(c));
        data2(i+(n-1)/2,j+(n-1)/2)=s^(1/n^2);
    end
end
subplot(2,3,3)
imshow(uint8(data2));title('lena 几何均值');

data3=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=1./double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=sum(sum(c));
        data3(i+(n-1)/2,j+(n-1)/2)=n^2/s;
    end
end
subplot(2,3,4)
imshow(uint8(data3));title('lena 谐波均值');

data4=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=median(median(c));
        data4(i+(n-1)/2,j+(n-1)/2)=s;
    end
end
subplot(2,3,5)
imshow(uint8(data4));title('lena 中值滤波');

data5=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=(max(max(c))+min(min(c)))/2;
        data5(i+(n-1)/2,j+(n-1)/2)=s;
    end
end
subplot(2,3,6)
imshow(uint8(data5));title('lena 中点滤波');
/////////////////////////////////////
dbx2.m//第二问源代码
clear;
clc;
data=imread('lena.bmp');
figure(1)
subplot(1,2,1)
imshow(data);title('lena');%原图像
dataz1=imnoise(data,'salt & pepper',0.1);
subplot(1,2,2)
imshow(dataz1);title('lena 椒盐噪声');

figure(2)
subplot(2,3,1)
imshow(dataz1);title('lena 椒盐噪声');

n=5;
H1=(1/n^2)*ones(n,n);
[P1,Q1]=size(dataz1);
data1=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*H1;
        s=sum(sum(c));
        data1(i+(n-1)/2,j+(n-1)/2)=s;
    end
end
subplot(2,3,2)
imshow(uint8(data1));title('lena 算术均值');

data2=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=prod(prod(c));
        data2(i+(n-1)/2,j+(n-1)/2)=s^(1/n^2);
    end
end
subplot(2,3,3)
imshow(uint8(data2));title('lena 几何均值');

data3=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=1./double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=sum(sum(c));
        data3(i+(n-1)/2,j+(n-1)/2)=n^2/s;
    end
end
subplot(2,3,4)
imshow(uint8(data3));title('lena 反谐波均值 Q=-1');

data4=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s1=sum(sum(c.*c));
        s2=sum(sum(c));
        data4(i+(n-1)/2,j+(n-1)/2)=s1/s2;
    end
end
subplot(2,3,5)
imshow(uint8(data4));title('lena 反谐波均值 Q=1');

data4=double(dataz1);
for i=1:P1-n+1
    for j=1:Q1-n+1
        c=double(dataz1(i:i+n-1,j:j+n-1)).*ones(n,n);
        s=median(median(c));
        data4(i+(n-1)/2,j+(n-1)/2)=s;
    end
end
subplot(2,3,6)
imshow(uint8(data4));title('lena 中值滤波');
//////////////////////////////////////
dbx3.m//第三问源代码
clear;
clc;
data=imread('lena.bmp');
figure(1)
subplot(1,2,1)
imshow(data);title('lena');%原图像
dataf=fft2(double(data));
dataf=fftshift(dataf);
[P1,Q1]=size(dataf);
a=0.1;b=0.1;T=1;
for u=1:P1
    for v=1:Q1
        H(u,v)=(T/((u*a+v*b)*pi))*sin(pi*((u*a+v*b)))*exp(-pi*(u*a+v*b)*sqrt(-1));
        datag(u,v)=H(u,v)*dataf(u,v);
    end
end
datag=ifftshift(datag);
datag=ifft2(datag);
datag=256.*(datag./max(max(datag)));
datag=uint8(real(datag));
subplot(1,2,2)
imshow(datag);title('lena 运动模糊')

dataz1=imnoise(datag,'gaussian',0,0.01);
figure(2)
subplot(2,2,1)
imshow(dataz1);title('lena 运动模糊+高斯模糊')

dataz1f=fft2(double(dataz1));
dataz1f=fftshift(dataz1f);
[P2,Q2]=size(dataz1f);
% k1=0.001;
% k2=0.01;
% k3=0.5;
% k1=0.05;
% k2=0.01;
% k3=0.015;
k1=0.015;
k2=0.02;
k3=0.025;
for u=1:P2
    for v=1:Q2
        H(u,v)=(T/((u*a+v*b)*pi))*sin(pi*((u*a+v*b)))*exp(-pi*(u*a+v*b)*sqrt(-1));
        dataz1g_1(u,v)=1/H(u,v)*((abs(H(u,v)))^2/((abs(H(u,v)))^2+k1))*dataz1f(u,v);
        dataz1g_2(u,v)=1/H(u,v)*((abs(H(u,v)))^2/((abs(H(u,v)))^2+k2))*dataz1f(u,v);
        dataz1g_3(u,v)=1/H(u,v)*((abs(H(u,v)))^2/((abs(H(u,v)))^2+k3))*dataz1f(u,v);
    end
end
dataz1g_1=ifftshift(dataz1g_1);
dataz1g_1=ifft2(dataz1g_1);
dataz1g_1=256.*dataz1g_1./max(max(dataz1g_1));
dataz1g_1=uint8(real(dataz1g_1));
subplot(2,2,2);
imshow(dataz1g_1);title('lena 维纳滤波器复原  k1')
dataz1g_2=ifftshift(dataz1g_2);
dataz1g_2=ifft2(dataz1g_2);
dataz1g_2=256.*dataz1g_2./max(max(dataz1g_2));
dataz1g_2=uint8(real(dataz1g_2));
subplot(2,2,3);
imshow(dataz1g_2);title('lena 维纳滤波器复原  k2')
dataz1g_3=ifftshift(dataz1g_3);
dataz1g_3=ifft2(dataz1g_3);
dataz1g_3=256.*dataz1g_3./max(max(dataz1g_3));
dataz1g_3=uint8(real(dataz1g_3));
subplot(2,2,4);
imshow(dataz1g_3);title('lena 维纳滤波器复原  k3')

P=zeros(P2,Q2);
P(1:3,1:3)=[0,-1,0;
            -1,4,-1;
            0,-1,0;];
P_w=fft2(double(P));
P_w=fftshift(P_w);
w=0.0009;
for u=1:P2
    for v=1:Q2
        H(u,v)=(T/((u*a+v*b)*pi))*sin(pi*((u*a+v*b)))*exp(-pi*(u*a+v*b)*sqrt(-1));
        dataz1g_p(u,v)=1/H(u,v)*((abs(H(u,v)))^2/((abs(H(u,v)))^2+w*(abs(P_w(u,v)))^2))*dataz1f(u,v);
    end
end
dataz1g_p=ifftshift(dataz1g_p);
dataz1g_p=ifft2(dataz1g_p);
dataz1g_p=256.*dataz1g_p./max(max(dataz1g_p));
dataz1g_p=uint8(real(dataz1g_p));
figure(3)
imshow(dataz1g_p);title('lena 约束最小二乘滤波器复原')
